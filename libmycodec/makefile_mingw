MAKE=make
CC=g++
LD=g++
RM=rm
AR=ar
DEBUG= -g
OUT_PATH=/usr/local/libmycodec
PARAM=-c $(DEBUG) -o
FFMPEG_HOME=/usr/local/ffmpeg
FFMPEG_LIBS=$(FFMPEG_HOME)/lib/libavcodec.dll.a \
	$(FFMPEG_HOME)/lib/libavutil.dll.a \
	$(FFMPEG_HOME)/lib/libswscale.dll.a \
	$(FFMPEG_HOME)/lib/libavformat.dll.a \
	$(FFMPEG_HOME)/lib/libavdevice.dll.a \
	$(FFMPEG_HOME)/lib/libavfilter.dll.a
X264_HOME=/usr/local/x264
LIBYUV_HOME=/usr/local/libyuv
MYLIB_HOME=/usr/local/mylib
MYLIB_INCLUDE=$(MYLIB_HOME)/inc
MYLIB_LIBS=$(MYLIB_HOME)/lib
FFMPEG_SOLIB=-lavcodec -lavutil -lswscale -lavformat -lavdevice -lavfilter
CFLAG=-I/usr/local/include -I$(FFMPEG_HOME)/include -I$(X264_HOME)/include -I./inc -I$(LIBYUV_HOME)/include -I$(MYLIB_INCLUDE) -DWIN32 -D__STDC_CONSTANT_MACROS
LDFLAG=-L/usr/local/lib -L$(FFMPEG_HOME)/lib -L$(MYLIB_LIBS) -L./ $(FFMPEG_SOLIB) -L$(X264_HOME)/lib $(LIBYUV_HOME)/lib/libyuv.a -lx264 -lmylib -lpthread
EXTRA_LIBS=

SRC=$(wildcard ./src/*.cpp)
OBJ=$(foreach n,$(SRC),./$(notdir $(subst .cpp,.o,$(n))))

TARGET = test_codec
LIB_A = libmycodec.a
SO_LIB = libmycodec.so
IMPLIB = libmycodec.lib
DEFNAME=libmycodec.def

all: $(TARGET) $(SO_LIB)

$(TARGET):test_codec.o $(SO_LIB)
	$(CC) -o $@ $? $(LDFLAG) $(EXTRA_LIBS) -lmycodec
$(SO_LIB):$(OBJ)
	$(LD) -shared -fPIC -o $@ $? $(LDFLAG) $(EXTRA_LIBS) -Wl,--out-implib,$(IMPLIB)
$(OBJ):$(SRC)
	$(CC) $(PARAM) $@ ./src/$(notdir $*).cpp $(CFLAG)
test_codec.o: test_codec.cpp
	$(CC) $(PARAM) $@ $*.cpp $(CFLAG)

install:
	mkdir -p $(OUT_PATH)
	mkdir -p $(OUT_PATH)/bin
	mkdir -p $(OUT_PATH)/lib
	mkdir -p $(OUT_PATH)/inc
	cp -Rvf ./inc $(OUT_PATH)/.
	cp -vf $(TARGET) $(OUT_PATH)/bin
	cp -vf $(SO_LIB) $(OUT_PATH)/lib
	cp -vf $(IMPLIB) $(OUT_PATH)/lib
clean:
	-$(RM) -vf $(OBJ)
	$(RM) -vf $(TARGET)
	$(RM) -vf $(LIB_A)
	$(RM) -vf $(SO_LIB)
	$(RM) -vf test_codec.o

